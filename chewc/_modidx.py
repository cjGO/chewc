# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/chewc',
                'doc_host': 'https://cjGO.github.io',
                'git_url': 'https://github.com/cjGO/chewc',
                'lib_path': 'chewc'},
  'syms': { 'chewc.cross': { 'chewc.cross._make_cross_geno': ('cross.html#_make_cross_geno', 'chewc/cross.py'),
                             'chewc.cross.make_cross': ('cross.html#make_cross', 'chewc/cross.py')},
            'chewc.meiosis': { 'chewc.meiosis._create_gamete': ('meiosis.html#_create_gamete', 'chewc/meiosis.py'),
                               'chewc.meiosis._sample_chiasmata': ('meiosis.html#_sample_chiasmata', 'chewc/meiosis.py'),
                               'chewc.meiosis.meiosis_for_one_cross': ('meiosis.html#meiosis_for_one_cross', 'chewc/meiosis.py')},
            'chewc.phenotype': { 'chewc.phenotype._add_environmental_noise': ( 'phenotype.html#_add_environmental_noise',
                                                                               'chewc/phenotype.py'),
                                 'chewc.phenotype._calculate_gvs': ('phenotype.html#_calculate_gvs', 'chewc/phenotype.py'),
                                 'chewc.phenotype.set_bv': ('phenotype.html#set_bv', 'chewc/phenotype.py'),
                                 'chewc.phenotype.set_pheno': ('phenotype.html#set_pheno', 'chewc/phenotype.py')},
            'chewc.pipe': {'chewc.pipe._pad_and_stack_arrays': ('pipe.html#_pad_and_stack_arrays', 'chewc/pipe.py')},
            'chewc.popgen': { 'chewc.popgen.msprime_pop': ('popgen.html#msprime_pop', 'chewc/popgen.py'),
                              'chewc.popgen.quick_haplo': ('popgen.html#quick_haplo', 'chewc/popgen.py')},
            'chewc.population': { 'chewc.population.Population': ('population.html#population', 'chewc/population.py'),
                                  'chewc.population.Population.__repr__': ('population.html#population.__repr__', 'chewc/population.py'),
                                  'chewc.population.Population.dosage': ('population.html#population.dosage', 'chewc/population.py'),
                                  'chewc.population.Population.haplo_matrix': ( 'population.html#population.haplo_matrix',
                                                                                'chewc/population.py'),
                                  'chewc.population.Population.nChr': ('population.html#population.nchr', 'chewc/population.py'),
                                  'chewc.population.Population.nInd': ('population.html#population.nind', 'chewc/population.py'),
                                  'chewc.population.Population.nTraits': ('population.html#population.ntraits', 'chewc/population.py'),
                                  'chewc.population.Population.plot_maf': ('population.html#population.plot_maf', 'chewc/population.py'),
                                  'chewc.population.combine_populations': ('population.html#combine_populations', 'chewc/population.py'),
                                  'chewc.population.subset_population': ('population.html#subset_population', 'chewc/population.py')},
            'chewc.predict': { 'chewc.predict.PredictionResults': ('predict.html#predictionresults', 'chewc/predict.py'),
                               'chewc.predict._jit_calc_a_inverse': ('predict.html#_jit_calc_a_inverse', 'chewc/predict.py'),
                               'chewc.predict._mme_solver_cg': ('predict.html#_mme_solver_cg', 'chewc/predict.py'),
                               'chewc.predict.calc_a_inverse_matrix_pedigree_jax': ( 'predict.html#calc_a_inverse_matrix_pedigree_jax',
                                                                                     'chewc/predict.py'),
                               'chewc.predict.calc_g_matrix': ('predict.html#calc_g_matrix', 'chewc/predict.py'),
                               'chewc.predict.mme_predict_ablup': ('predict.html#mme_predict_ablup', 'chewc/predict.py'),
                               'chewc.predict.mme_predict_gblup': ('predict.html#mme_predict_gblup', 'chewc/predict.py')},
            'chewc.relationships': { 'chewc.relationships.calc_a_inverse_matrix_pedigree_jax': ( 'relationships.html#calc_a_inverse_matrix_pedigree_jax',
                                                                                                 'chewc/relationships.py'),
                                     'chewc.relationships.calc_a_matrix_pedigree': ( 'relationships.html#calc_a_matrix_pedigree',
                                                                                     'chewc/relationships.py'),
                                     'chewc.relationships.calc_g_matrix': ('relationships.html#calc_g_matrix', 'chewc/relationships.py'),
                                     'chewc.relationships.calc_ibd_matrix': ( 'relationships.html#calc_ibd_matrix',
                                                                              'chewc/relationships.py'),
                                     'chewc.relationships.calc_relationship_matrices': ( 'relationships.html#calc_relationship_matrices',
                                                                                         'chewc/relationships.py')},
            'chewc.select': { 'chewc.select.SelectionMethod': ('select.html#selectionmethod', 'chewc/select.py'),
                              'chewc.select.SelectionMethod.__init__': ('select.html#selectionmethod.__init__', 'chewc/select.py'),
                              'chewc.select.SelectionMethod.select_parents': ( 'select.html#selectionmethod.select_parents',
                                                                               'chewc/select.py'),
                              'chewc.select.TruncationSelection': ('select.html#truncationselection', 'chewc/select.py'),
                              'chewc.select.TruncationSelection.__init__': ('select.html#truncationselection.__init__', 'chewc/select.py'),
                              'chewc.select.TruncationSelection.select_parents': ( 'select.html#truncationselection.select_parents',
                                                                                   'chewc/select.py')},
            'chewc.sp': { 'chewc.sp.SimParam': ('simparam.html#simparam', 'chewc/sp.py'),
                          'chewc.sp.SimParam.__repr__': ('simparam.html#simparam.__repr__', 'chewc/sp.py'),
                          'chewc.sp.SimParam.centromere': ('simparam.html#simparam.centromere', 'chewc/sp.py'),
                          'chewc.sp.SimParam.from_founder_pop': ('simparam.html#simparam.from_founder_pop', 'chewc/sp.py'),
                          'chewc.sp.SimParam.n_chr': ('simparam.html#simparam.n_chr', 'chewc/sp.py'),
                          'chewc.sp.SimParam.n_loci_per_chr': ('simparam.html#simparam.n_loci_per_chr', 'chewc/sp.py'),
                          'chewc.sp.SimParam.n_traits': ('simparam.html#simparam.n_traits', 'chewc/sp.py')},
            'chewc.trait': { 'chewc.trait.LociMap': ('trait.html#locimap', 'chewc/trait.py'),
                             'chewc.trait.LociMap.n_loci': ('trait.html#locimap.n_loci', 'chewc/trait.py'),
                             'chewc.trait.TraitA': ('trait.html#traita', 'chewc/trait.py'),
                             'chewc.trait.TraitCollection': ('trait.html#traitcollection', 'chewc/trait.py'),
                             'chewc.trait.TraitCollection.n_loci': ('trait.html#traitcollection.n_loci', 'chewc/trait.py'),
                             'chewc.trait.TraitCollection.n_traits': ('trait.html#traitcollection.n_traits', 'chewc/trait.py'),
                             'chewc.trait._calculate_gvs_vectorized': ('trait.html#_calculate_gvs_vectorized', 'chewc/trait.py'),
                             'chewc.trait.add_trait_a': ('trait.html#add_trait_a', 'chewc/trait.py')}}}
